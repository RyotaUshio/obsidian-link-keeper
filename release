#!/usr/bin/env python3

import json
import argparse
import subprocess

def run(cmd):
    comp = subprocess.run(cmd)
    if comp.returncode != 0:
        exit(1)

if __name__ == '__main__':
    run(['git', 'switch', 'main'])

    parser = argparse.ArgumentParser()
    parser.add_argument('version')
    args = parser.parse_args()

    args.version = args.version.strip()

    with open('./manifest.json') as f:
        manifest = json.load(f)

    with open('./package.json') as f:
        package = json.load(f)

    assert manifest['version'] == package['version']

    ans = input(f'Update version from {manifest["version"]} to {args.version}? ([y]/n):').strip()
    if ans not in ('', 'y'):
        exit(1)

    manifest['version'] = args.version
    package['version'] = args.version

    with open('./manifest.json', 'w') as f:
        json.dump(manifest, f, indent=4)

    with open('./package.json', 'w') as f:
        json.dump(package, f, indent=4)

    run(['npm', 'i'])
    run(['git', 'add', '.'])
    run(['git', 'commit', '-m', f'release: {args.version}'])
    run(['git', 'pull', '--rebase'])
    run(['git', 'push'])
    run(['git', 'tag', '-a', args.version, '-m', args.version])
    run(['git', 'push', 'origin', args.version])
